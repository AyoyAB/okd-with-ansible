global
  log /dev/log  local0
  log /dev/log  local1 notice
  chroot        /var/lib/haproxy
  stats socket  /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
  stats timeout 30s
  user          haproxy
  group         haproxy
  daemon

defaults
  mode                    http
  log                     global
  option                  dontlognull
  option                  http-server-close
  option                  redispatch
  retries                 3
  timeout http-request    10s
  timeout queue           1m
  timeout connect         10s
  timeout client          1m
  timeout server          1m
  timeout http-keep-alive 10s
  timeout check           10s
  maxconn                 3000

frontend stats
  bind    *:1936
  mode    http
  log     global
  maxconn 10
  stats   enable
  stats   hide-version
  stats   refresh 30s
  stats   show-node
  stats   show-desc Stats for {{ groups['lbs'][0] }}
  stats   auth {{ haproxy_stats_username }}:{{ haproxy_stats_password }}
  stats   uri /stats

listen api-server-6443
  bind *:6443
  mode tcp
{% if bootstrap_enabled %}
  server {{ groups['bootstrap'][0].split(".")[0] }} {{ groups['bootstrap'][0] }}:6443 check inter 1s backup
{% endif %}
{% for host in groups['masters'] %}
  server {{ host.split(".")[0] }} {{ host }}:6443 check inter 1s
{% endfor %}

listen machine-config-server-22623
  bind *:22623
  mode tcp
{% if bootstrap_enabled %}
  server {{ groups['bootstrap'][0].split(".")[0] }} {{ groups['bootstrap'][0] }}:22623 check inter 1s backup
{% endif %}
{% for host in groups['masters'] %}
  server {{ host.split(".")[0] }} {{ host }}:22623 check inter 1s
{% endfor %}

listen ingress-router-443
  bind *:443
  mode tcp
  balance source
{% if use_control_plane_nodes_for_compute %}
{# The Ingress Controller pods run on the control plane nodes when there are no compute nodes. #}
{% for host in groups['masters'] %}
  server {{ host.split(".")[0] }} {{ host }}:443 check inter 1s
{% endfor %}
{% else %}
{# The Ingress Controller pods run on the compute nodes by default. #}
{% for host in groups['workers'] %}
  server {{ host.split(".")[0] }} {{ host }}:443 check inter 1s
{% endfor %}
{% endif %}

listen ingress-router-80
  bind *:80
  mode tcp
  balance source
{% if use_control_plane_nodes_for_compute %}
{# The Ingress Controller pods run on the control plane nodes when there are no compute nodes. #}
{% for host in groups['masters'] %}
  server {{ host.split(".")[0] }} {{ host }}:80 check inter 1s
{% endfor %}
{% else %}
{# The Ingress Controller pods run on the compute nodes by default. #}
{% for host in groups['workers'] %}
  server {{ host.split(".")[0] }} {{ host }}:80 check inter 1s
{% endfor %}
{% endif %}
