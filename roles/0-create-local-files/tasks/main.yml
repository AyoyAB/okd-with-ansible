- name: Check status of pull secret
  ansible.builtin.stat:
    path: ./pull-secret
  register: secret

- name: Verify pull secret exists
  when: not secret.stat.exists
  ansible.builtin.fail:
    msg: there has to be a secret at ./pull-secret. Download secret from https://console.redhat.com/openshift/install/pull-secret to ./pull-secret

- name: Gathering facts
  ansible.builtin.setup:

- name: Detect install system is Linux x86_64
  when:
    - ansible_system == "Linux"
    - ansible_architecture == "x86_64"
  ansible.builtin.set_fact:
    okd_tools_arch: linux
    ignition_tool_arch: x86_64-linux

- name: Detect install system is MacOS x86_64
  when:
    - ansible_system == "Darwin"
    - ansible_architecture == "x86_64"
  ansible.builtin.set_fact:
    okd_tools_arch: mac
    ignition_tool_arch: x86_64-apple-darwin

- name: Fail if architecture is not supported
  when: (okd_tools_arch is not defined) or
        (ignition_tool_arch is not defined)
  ansible.builtin.fail:
    msg: "Aborting. System or architecture is not supported at the moment."

  # https://docs.openshift.com/container-platform/4.10/installing/installing_bare_metal_ipi/ipi-install-installation-workflow.html#configuring-the-install-config-file_ipi-install-installation-workflow
- name: Fail if only one worker and not use_control_plane_nodes_for_compute
  ansible.builtin.fail:
    msg: |
      Running with only one worker is not a supported configuration of OpenShift/OKD.
      Set use_control_plane_nodes_for_compute to true to circumvent.
  when:
    - not use_control_plane_nodes_for_compute
    - groups['nodes'] | length == 1

- ansible.builtin.include_tasks: "1-download-installer.yml"
- ansible.builtin.include_tasks: "2-download-tools.yml"
- ansible.builtin.include_tasks: "3-create-openshift-config.yml"
- ansible.builtin.include_tasks: "4-validate-ignition-files.yml"
- ansible.builtin.include_tasks: "5-create-run-script.yml"
