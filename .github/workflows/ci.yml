---
name: CI
"on":
  pull_request:
  push:
jobs:
  lint:
    if: (github.event_name != 'pull_request' && ! github.event.pull_request.head.repo.fork) || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork)
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'  # caching pip dependencies

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          make dependencies

      - name: Lint code
        run: |
          make lint

  molecule:
    if: (github.event_name != 'pull_request' && ! github.event.pull_request.head.repo.fork) || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork)
    name: Molecule
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4

      - name: Retrieve pull-secret
        run: |
          echo '{"auths":{"fake":{"auth": "Zm9vOmJhcgo="}}}' > pull-secret

      - name: Generate ansible SSH key
        run: |
          ssh-keygen -t ed25519 -C "ansible ssh key" -f ~/.ssh/id_ansible -q -N ''

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          cache: 'pip'  # caching pip dependencies

      - name: Install dependencies
        run: |
          pip3 install --upgrade pip

          # Prepare for fetching vagrant from hashicorp
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list

          sudo apt update
          sudo apt install vagrant virtualbox
          make dependencies

      - name: Disable kvm
        run: |
          echo "Stop KVM"
          #  sudo invoke-rc.d kvm stop       # Unload all modules
          sudo invoke-rc.d qemu-kvm stop || echo "Could not stop qemu-kvm" # Karmic
          sudo service qemu-kvm stop     || echo "Could not stop qemu-kvm" # Lucid and later

          echo ""
          echo "These kvm modules are loaded"
          sudo lsmod | grep kvm
          echo ""
          echo "Trying to unload kvm_intel"
          sudo rmmod kvm_intel || echo "Could not remove kvm_intel, perhaps this is AMD?"
          echo ""
          echo "Trying to unload kvm_amd"
          sudo rmmod kvm_amd   || echo "Could not remove kvm_amd, perhaps this is Intel?"
          echo ""
          echo "Trying to unload kvm"
          sudo rmmod kvm
          echo ""
          echo "These kvm modules are loaded:"
          sudo lsmod | grep kvm || echo "Found no kvm modules loaded"

      - name: Test with molecule
        run: |
          make molecule-test
